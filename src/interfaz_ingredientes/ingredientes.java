/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz_ingredientes;

import conexiones.MyConnection;
import interfaz_empleados.registro_nuevo_emp;
import interfaz_empleados.roles_empleados;
import interfaz_productos.productos;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author DELL
 */
public class ingredientes extends javax.swing.JFrame {
    
 DefaultTableModel ingredientes;
    public ingredientes() {
        
        initComponents();
        
        this.ingredientes = (DefaultTableModel) tabla.getModel();
       Mostrardatos("");
         
           
             
         
         
       
    }
    public final void Mostrardatos(String valor){
           
            MyConnection cc=new MyConnection();
            Connection cn=MyConnection.getConnection();
           RefrescarTabla();
          ingredientes.addColumn("Codigo");
            ingredientes.addColumn("Nombre");
            ingredientes.addColumn("Cantidad en existencia");
            ingredientes.addColumn("Precio");
           
            ingredientes.addColumn("Codigo de su proveedor");
              
 
            this.tabla.setModel(ingredientes);
            String sql;
            if (valor.equals(""))
            {
            sql="SELECT * FROM ingredientes";
            }
            else{
            sql="SELECT * FROM ingredientes WHERE ingredientes='"+valor+"'";
            } 

            String []datos=new String [5];
            try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
            datos[0]=rs.getString(1);
            datos[1]=rs.getString(2);
            datos[2]=rs.getString(3);
            datos[3]=rs.getString(4);
            datos[4]=rs.getString(5);
         

            
         ingredientes.addRow(datos);
            }
            
            tabla.setModel((TableModel) ingredientes);
            }catch(SQLException ex){
            Logger.getLogger(productos.class.getName()).log(Level.SEVERE,null,ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
            }
            
    }
    public final void RefrescarTabla(){
        //Funcion encargada de Refrescar la tabla utilizando Revalidate
        try {
        ingredientes.setColumnCount(0);
       ingredientes.setRowCount(0);
        tabla.revalidate();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
}
            
            public void Limpiar(){
       
        try{
        txt_nombre.setText("");
         txt_cantidad.setText("");
        txt_precio.setText("");
        txt_proveedor.setText("");
    
        }
        
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "error "+ex);
        
    }
        } 
      


        
    
    
    
//public final void RefrescarTabla(){
//        //Funcion encargada de Refrescar la tabla utilizando Revalidate
//        try {
//        ingredientes.setColumnCount(0);
//       ingredientes.setRowCount(0);
//        tabla.revalidate();
//        
//        }
//        catch(Exception ex){
//            JOptionPane.showMessageDialog(null, "error "+ex);
//        }
//}
//        
//        public void Limpiar(){
//       
//        try{
//        txt_nombre.setText("");
//        txt_precio.setText("");
//        txt_descripcion.setText("");
//  
//        txt_ingredientes.setText("");
//        txt_codigo.setText("");
//        }
//        
//        catch (Exception ex){
//            JOptionPane.showMessageDialog(null, "error "+ex);
//        
//    }
//        } 
//    }
////
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_proveedor = new javax.swing.JTextField();
        btt_buscar = new javax.swing.JButton();
        btt_insertar = new javax.swing.JButton();
        btt_modificar = new javax.swing.JButton();
        btt_eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(227, 216, 253));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));

        jLabel1.setFont(new java.awt.Font("Californian FB", 0, 24)); // NOI18N
        jLabel1.setText("CONTROL DE INGREDIENTES");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tab(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Ingresa su ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Cantidad en existencia");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Precio");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Codigo de su proveedor");

        btt_buscar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btt_buscar.setText("Buscar ingrediente");
        btt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_buscarActionPerformed(evt);
            }
        });

        btt_insertar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btt_insertar.setText("Insertar un nuevo producto");
        btt_insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_insertarActionPerformed(evt);
            }
        });

        btt_modificar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btt_modificar.setText("Modificar ingrediente");
        btt_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_modificarActionPerformed(evt);
            }
        });

        btt_eliminar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btt_eliminar.setText("Eliminar ingrediente");
        btt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btt_buscar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(txt_cantidad)
                            .addComponent(txt_precio)
                            .addComponent(txt_proveedor))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btt_insertar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btt_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btt_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(388, 388, 388))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(310, 310, 310))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btt_buscar))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btt_insertar)
                    .addComponent(btt_modificar)
                    .addComponent(btt_eliminar))
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_buscarActionPerformed
   
                                     
        PreparedStatement ps;
         ResultSet rs;
                 String query =("SELECT*FROM ingredientes WHERE Codigo = ?");
    
             try {
           ps = MyConnection.getConnection().prepareStatement(query);
           ps.setString(1, txt_id.getText());
           
            rs=ps.executeQuery();
            
            if (rs.next()){
                txt_nombre.setText(rs.getString("Nombre"));
                txt_cantidad.setText(rs.getString("Cantidad"));
                 txt_precio.setText(rs.getString("Precio"));
                  txt_proveedor.setText(rs.getString("Codigo_proveedor"));
                  
                
                
            } else {
                     JOptionPane.showMessageDialog(null, "Ingrediente no encontrado" );
            }
                  
                  
                  
                  
                    } catch (SQLException ex) {
            Logger.getLogger(roles_empleados.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
        }
          
    }//GEN-LAST:event_btt_buscarActionPerformed

    private void btt_insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_insertarActionPerformed
           String nom = txt_nombre.getText();
           String cant = txt_cantidad.getText();
           String prec= txt_precio.getText();
           String pro= txt_proveedor.getText();
 
         
        PreparedStatement ps;
        String query = "INSERT INTO `ingredientes`(`Nombre`,`Cantidad`, `Precio`,`Codigo_proveedor`) VALUES (?,?,?,?)";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            
       ps.setString(1, nom);
       ps.setString(2, cant);
       ps.setString(3, prec);
      
       ps.setString(4,pro);

               
            if(ps.executeUpdate() > 0)
            {
                JOptionPane.showMessageDialog(null, "Nuevo ingrediente agregado");
                
            }
            
//        
                 
        } catch (SQLException ex) {
            Logger.getLogger(registro_nuevo_emp.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
            }
         Mostrardatos("");
    }//GEN-LAST:event_btt_insertarActionPerformed

    private void btt_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_modificarActionPerformed
       String id = txt_id.getText();
       String nom = txt_nombre.getText();
         String canti = txt_cantidad.getText();
       String prec = txt_precio.getText();
       String pro = txt_proveedor.getText();
    
       
        
        PreparedStatement ps;
        String query = "UPDATE ingredientes SET Nombre=?, Cantidad=?, Precio=?, Codigo_proveedor=?  WHERE Codigo=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            
            
            ps.setString(1, nom);
            ps.setString(2, canti);
            ps.setString(3, prec);
            ps.setString(4, pro);
           
            ps.setString(5, id);
        
 
            ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Ingrediente Modificado");
               
                
        } catch (SQLException ex) {
            Logger.getLogger(productos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "error "+ex);
            }
         Mostrardatos("");
    }//GEN-LAST:event_btt_modificarActionPerformed

    private void btt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_eliminarActionPerformed
         String id = txt_id.getText();
      
          
        PreparedStatement ps;
        String query = "DELETE FROM ingredientes WHERE Codigo=?";
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            
            
            ps.setString(1, id);
         
        
 
            ps.executeUpdate();
                javax.swing.JOptionPane.showMessageDialog(null, " Ingrediente eliminado");
               
                
        } catch (SQLException ex) {
            Logger.getLogger(productos.class.getName()).log(Level.SEVERE, null, ex);
            javax.swing.JOptionPane.showMessageDialog(null, "error "+ex);
            }
         Mostrardatos("");
    }//GEN-LAST:event_btt_eliminarActionPerformed

    private void tab(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab
         try {  
        String id = (String) ingredientes.getValueAt(tabla.getSelectedRow(),0);
        String nombre = (String) ingredientes.getValueAt(tabla.getSelectedRow(),1);
        String cantidad = (String) ingredientes.getValueAt(tabla.getSelectedRow(),2);
        String precio = (String) ingredientes.getValueAt(tabla.getSelectedRow(),3);
      
String proveedor = (String) ingredientes.getValueAt(tabla.getSelectedRow(),4);

        
        txt_id.setText(id);
        txt_nombre.setText(nombre);
           txt_cantidad.setText(cantidad);
        txt_precio.setText(precio);
     
      txt_proveedor.setText(proveedor);
         
        }
        catch (Exception ex){
        JOptionPane.showMessageDialog(null, "error "+ex);
        }
    Mostrardatos("");
    }//GEN-LAST:event_tab

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ingredientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btt_buscar;
    public javax.swing.JButton btt_eliminar;
    public javax.swing.JButton btt_insertar;
    public javax.swing.JButton btt_modificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_proveedor;
    // End of variables declaration//GEN-END:variables
}
